cmake_minimum_required(VERSION 3.10)
project(Harmonious-Paradox)

# Enable generation of compile commands database
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Set C++ standard to C++20
set(CMAKE_CXX_STANDARD 20)

# Set compiler flags
set(CMAKE_CXX_FLAGS "-g -fsanitize=address,undefined,alignment,bounds,pointer-overflow -fno-omit-frame-pointer")

# Include paths
file(STRINGS includePaths.txt INCLUDE_PATHS)
include_directories(${INCLUDE_PATHS})


find_package(SDL2 REQUIRED)
include_directories(${SDL2_INCLUDE_DIRS})

# Source files
file(GLOB SOURCE_FILES "src/*.cpp" "src/*.h" "lib/imgui/*.cpp" "lib/imgui/backends/imgui_impl_vulkan.cpp" "lib/imgui/backends/**sdl2**.cpp")
add_executable(${PROJECT_NAME} ${SOURCE_FILES})

# Libraries paths
file(STRINGS libPaths.txt LIB_PATHS)
link_directories(${LIB_PATHS})

# Libraries
file(STRINGS libs.txt LIBRARIES)
foreach(LIB ${LIBRARIES})
    target_link_libraries(${PROJECT_NAME} ${LIB})
endforeach()

# Frameworks
find_library(COCOA Cocoa)
find_library(OPENGL OpenGL)
find_library(IOKIT IOKit)
find_library(METAL Metal)
find_library(QUARTZCORE QuartzCore)
target_link_libraries(${PROJECT_NAME} ${COCOA} ${OPENGL} ${IOKIT} ${METAL} ${QUARTZCORE} ${SDL2_LIBRARIES})
target_compile_definitions(${PROJECT_NAME} PUBLIC DEBUG=1)
